apply plugin: 'com.android.library'
apply plugin: 'maven'

task wrapper(type: Wrapper) {
    gradleVersion = '2.2.1'
}

buildscript {
    repositories {
        mavenCentral()
    }
    dependencies {
        classpath 'com.android.tools.build:gradle:2.1.3'
    }
}

dependencies {
    def artifactSupportAnnotations = 'com.android.support:support-annotations:21.0.3'
    def useLocalAnnotations = false
    def localAnnotations = ':support-annotations'

    allprojects {
        rootProject.allprojects.project.each {
            if (it.path == localAnnotations) {
                useLocalAnnotations = true
            }
        }
    }

    if (useLocalAnnotations) {
        println 'Using local support-annotations library in ' + project.path
        compile project(localAnnotations)
    } else {
        compile artifactSupportAnnotations
    }
}

android {
    compileSdkVersion Integer.parseInt(project.ANDROID_BUILD_SDK_VERSION)
    buildToolsVersion project.ANDROID_BUILD_TOOLS_VERSION

    defaultConfig {
        versionCode Integer.parseInt(project.VERSION_CODE)
        versionName project.VERSION_NAME
        minSdkVersion Math.max(5, Integer.parseInt(project.ANDROID_BUILD_MIN_SDK_VERSION))
        targetSdkVersion Integer.parseInt(project.ANDROID_BUILD_TARGET_SDK_VERSION)
    }

    sourceSets {
        main {
            manifest.srcFile 'AndroidManifest.xml'
            java.srcDirs = ['src']
        }
    }

    libraryVariants.all { variant ->
        def name = variant.buildType.name
        if (name.equals(com.android.builder.core.BuilderConstants.DEBUG)) {
            return; // Skip debug builds.
        }
        def task = project.tasks.create "jar${name.capitalize()}", Jar
        task.dependsOn variant.javaCompile
        task.from variant.javaCompile.destinationDir
        artifacts.add('archives', task);

        configurations.archives.artifacts.with { archives ->
            def aarArtifact
            archives.each {
                if (it.file =~ 'aar') {
                    aarArtifact = it
                }
            }
            //println "AAR to delete: ${aarArtifact}"
            remove(aarArtifact)
        }
    }
}


//apply from: 'https://raw.githubusercontent.com/googolmo/gradle-mvn-push/master/gradle-mvn-push.gradle'
apply from: 'https://raw.githubusercontent.com/mcxiaoke/gradle-mvn-push/master/gradle-mvn-push.gradle'
